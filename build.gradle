buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        // MixinGradle:
        classpath 'org.spongepowered:mixingradle:0.7.+'
    }
}

plugins {
    id 'eclipse'
    id 'maven-publish'
    //id 'net.minecraftforge.gradle' version '5.1.+'
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

version = '2.0.0-1.18.2-forge'
group = 'net.iamaprogrammer.toggleableitemframes' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'toggleableitemframes'

mixin {
    // MixinGradle Settings
    //add sourceSets.main, 'mixins.toggleableitemframes.refmap.json'
    config 'mixins.toggleableitemframes.json'
}

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {

    mappings channel: 'official', version: '1.18.2'


    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            //property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'toggleableitemframes'

            mods {
                toggleableitemframes {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            //property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'toggleableitemframes'

            mods {
                toggleableitemframes {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            //property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'toggleableitemframes'

            mods {
                toggleableitemframes {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            //property 'forge.logging.console.level', 'debug'


            args '--mod', 'toggleableitemframes', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                toggleableitemframes {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.2.0'

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "toggleableitemframes",
                "Specification-Vendor"    : "toggleableitemframessareus",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "toggleableitemframessareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}


jar.finalizedBy('reobfJar')


publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}